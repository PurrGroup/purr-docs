INSERT INTO `content` (`id`, `content`, `create_time`, `update_time`) VALUES (6, '这是你的默认文章，你可以自由编辑。', '2021-10-19 09:24:53', '2021-10-19 09:24:53');
INSERT INTO `content` (`id`, `content`, `create_time`, `update_time`) VALUES (7, '<!-- wp:html -->\\n<p>app/src/main/res目录内容：</p>\\n<pre><p>.\\n├── drawable  图片目录\\n│   └── ic_launcher_background.xml\\n├── drawable-v24\\n│   └── ic_launcher_foreground.xml\\n├── layout  布局文件\\n│   └── activity_main.xml\\n├── mipmap-anydpi-v26\\n│   ├── ic_launcher.xml\\n│   └── ic_launcher_round.xml\\n├── mipmap-hdpi\\n│   ├── ic_launcher.png\\n│   └── ic_launcher_round.png\\n├── mipmap-mdpi\\n│   ├── ic_launcher.png\\n│   └── ic_launcher_round.png\\n├── mipmap-xhdpi\\n│   ├── ic_launcher.png\\n│   └── ic_launcher_round.png\\n├── mipmap-xxhdpi  应用图标目录\\n│   ├── ic_launcher.png\\n│   └── ic_launcher_round.png\\n├── mipmap-xxxhdpi\\n│   ├── ic_launcher.png\\n│   └── ic_launcher_round.png\\n├── values  字符串，样式，颜色配置目录\\n│   ├── colors.xml\\n│   ├── strings.xml\\n│   └── themes.xml\\n└── values-night\\n └── themes.xml</p>\\n</pre>\\n<ul>\\n<li>在代码中，我们通过<code>R.string.app_name</code>可以获得对某个字符串的引用</li>\\n<li>在XML中，通过<code>@string/app_name</code>可以获得对某个字符串的引用</li>\\n\\n</ul>\\n<p>基本的语法就是如上的两种方式，其中string部分是可以替换的，如果引用的是图片资源则使用<code>drawable</code>，如果引用的是应用图标，则可以替换成<code>mipmap</code>。如果引用的是布局文件，则可以替换成<code>layout</code>。</p>\\n<p>&nbsp;</p>\\n<p>任何Activity都要继承<code>AppCompatActivity</code>类，并且重写<code>onCreate(bundle)</code>方法，然后在<code>app/src/main/res</code>目录的AndroidManifest.xml文件中注册Activity。对于主Activity，我们需要使用<code>&lt;intent-filter&gt;</code>标签指定其为主Activity。一个示例如下：</p>\\n<pre><code class=\\\'language-xml\\\' lang=\\\'xml\\\'>&lt;activity android:name=&quot;.MainActivity&quot;\\n            android:label=&quot;Demo&quot;&gt;\\n            &lt;intent-filter&gt;\\n                &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt;\\n                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;\\n            &lt;/intent-filter&gt;\\n        &lt;/activity&gt;\\n</code></pre>\\n<p>其中的<code>android:label</code>属性指定了Activity中标题栏的内容，还会成为启动器中应用程序所显示的名称。如果一个应用程序没有指定任何主Activity，则其无法在启动器中看到和打开，只能作为第三方服务供其他应用在内部进行调用。</p>\\n<p>&nbsp;</p>\\n<h3 id=\\\'activity\\\'>Activity</h3>\\n<h4 id=\\\'显式intent和隐式intent\\\'>显式Intent和隐式Intent</h4>\\n<p><strong>显式Intent</strong>（通过<code>schme+host+port+path+mimeType</code>显式打开一个Activity）</p>\\n<pre><code class=\\\'language-kotlin\\\' lang=\\\'kotlin\\\'>binding.button1.setOnClickListener(){\\n            val intent = Intent(Intent.ACTION_VIEW)\\n            intent.data= Uri.parse(&quot;https://www.google.com.hk&quot;)\\n            startActivity(intent)\\n        }\\n</code></pre>\\n<p>&nbsp;</p>\\n<p><strong>隐式Intent</strong>(通过<code>schme</code>隐式打开一个Activity)</p>\\n<pre><code class=\\\'language-xml\\\' lang=\\\'xml\\\'>&lt;activity android:name=&quot;.SecondActivity&quot;&gt;\\n            &lt;intent-filter tools:ignore=&quot;AppLinkUrlError&quot;&gt;\\n                &lt;action android:name=&quot;android.intent.action.VIEW&quot; /&gt;\\n                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;\\n                &lt;data android:scheme=&quot;https&quot;/&gt;\\n            &lt;/intent-filter&gt;\\n        &lt;/activity&gt;\\n</code></pre>\\n<p>其中<data>标签被包含于<intent-filter>标签中，用于向intent过滤器添加数据规范。该规范可以是只有数据类型（<code>mimeType</code> 属性），可以是只有 URI，也可以是既有数据类型又有 URI。URI 由其各个部分的单独属性指定：</p>\\n<blockquote><p>&lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;[&lt;path&gt;|&lt;pathPrefix&gt;|&lt;pathPattern&gt;]&lt;/p&gt;\\n</blockquote>\\n<p>⚠️用于指定网址格式的以下属性是可选的，但也相互依赖：</p>\\n<ul>\\n<li>如果没有为 Intent 过滤器指定 <code>scheme</code>，则系统会忽略其他所有 URI 属性。</li>\\n<li>如果没有为过滤器指定 <code>host</code>，则系统会忽略 <code>port</code> 属性以及所有路径属性。</li>\\n\\n</ul>\\n<p>同一 <code>&lt;intent-filter&gt;</code> 元素中包含的所有 <code>&lt;data&gt;</code> 元素都对同一过滤器起作用。例如，以下过滤器规范：</p>\\n<pre><code class=\\\'language-xml\\\' lang=\\\'xml\\\'>&lt;intent-filter . . . &gt;\\n        &lt;data android:scheme=&quot;something&quot; android:host=&quot;project.example.com&quot; /&gt;\\n        . . .\\n    &lt;/intent-filter&gt;\\n</code></pre>\\n<p>等同于以下规范：</p>\\n<pre><code class=\\\'language-xml\\\' lang=\\\'xml\\\'>&lt;intent-filter . . . &gt;\\n        &lt;data android:scheme=&quot;something&quot; /&gt;\\n        &lt;data android:host=&quot;project.example.com&quot; /&gt;\\n        . . .\\n    &lt;/intent-filter&gt;\\n</code></pre>\\n<p>您可以在 <code>&lt;intent-filter&gt;</code> 内放置任意数量的 <code>&lt;data&gt;</code> 元素，为其提供多个数据选项。它的属性都没有默认值。而显然，intent过滤器是通过匹配intent对象的规则来工作的。</p>\\n<p><strong>属性：</strong></p>\\n<p><code>android:scheme</code></p>\\n<p>URI 的模式部分。这是指定 URI 时最基本的属性；必须至少为过滤器设置一个 <code>scheme</code> 属性，否则其他 URI 属性都没有意义。</p>\\n<p>指定的模式应不带尾随冒号（例如，应指定 <code>http</code>，而不是 <code>http:</code>）。</p>\\n<p>如果为过滤器设置了数据类型（<code>mimeType</code> 属性），但未设置模式，则采用 <code>content:</code> 和 <code>file:</code> 架构。</p>\\n<blockquote><p>⭐<strong>注意</strong>：Android 框架中的架构匹配区分大小写，这一点与 RFC 不同。因此，您应始终使用小写字母指定架构。</p>\\n</blockquote>\\n<p><code>android:host</code></p>\\n<p>URI 授权方的主机部分。除非也为过滤器指定了 <code>scheme</code> 属性，否则此属性没有意义。要匹配多个子网域，请使用星号 (<code>*</code>) 匹配主机中的零个或多个字符。例如，主机 <code>*.google.com</code> 匹配 <code>www.google.com</code>、<code>.google.com</code> 和 <code>developer.google.com</code>。</p>\\n<p>星号必须是主机属性的第一个字符。例如，主机 <code>google.co.*</code> 无效，因为星号通配符不是第一个字符。</p>\\n<blockquote><p>⭐️<strong>注意</strong>：Android 框架中的主机名匹配区分大小写，这一点与正式的 RFC 不同。因此，您应始终使用小写字母指定主机名。</p>\\n</blockquote>\\n<p><code>android:port</code></p>\\n<p>URI 授权方的端口部分。仅当同时为过滤器指定了 <code>scheme</code> 和 <code>host</code> 属性时，此属性才有意义。</p>\\n<p><code>android:path</code></p>\\n<p><code>android:pathPrefix</code></p>\\n<p><code>android:pathPattern</code></p>\\n<p>URI 的路径部分，必须以 / 开头。<code>path</code> 属性指定与 Intent 对象中的完整路径匹配的完整路径。<code>pathPrefix</code> 属性指定只与 Intent 对象中的路径的初始部分匹配的部分路径。<code>pathPattern</code> 属性指定与 Intent 对象中的完整路径匹配的完整路径，但它可以包含以下通配符：</p>\\n<ul>\\n<li>星号（“<code>*</code>”）匹配出现零次到多次的紧邻前面的字符的一个序列。</li>\\n<li>句点后跟星号（“<code>.*</code>”）匹配零个到多个字符的任意序列。</li>\\n\\n</ul>\\n<p>由于在从 XML 读取字符串时（在将其解析为模式之前）将“<code>\\\\</code>”用作转义字符，因此您需要进行双重转义。例如，字面量“<code>*</code>”将编写为“<code>\\\\\\\\*</code>”，字面量“”将编写为“<code>\\\\\\\\\\\\\\\\</code>”。这基本上与采用 Java 代码构造字符串时需要编写的内容一样。详细类型可以查<code>PatternMatcher</code>类中的<code>PATTERN_LITERAL</code>、<code>PATTERN_PREFIX</code>和<code>PATTERN_SIMPLE_GLOB</code>三个常量的说明。</p>\\n<p>仅当同时为过滤器指定了 <code>scheme</code> 和 <code>host</code> 属性时，这些属性才有意义。</p>\\n<p><code>android:mimeType</code></p>\\n<p>MIME 媒体类型，如 <code>image/jpeg</code> 或 <code>audio/mpeg4-generic</code>。子类型可以是星号通配符 (<code>*</code>)，以指示任何子类型都匹配。</p>\\n<p>Intent 过滤器经常会声明仅包含 <code>android:mimeType</code> 属性的 <code>&lt;data&gt;</code>。</p>\\n<blockquote><p>⭐️<strong>注意</strong>：Android 框架中的 MIME 类型匹配区分大小写，这一点与正式的 RFC MIME 类型不同。因此，您应始终使用小写字母指定 MIME 类型。</p>\\n</blockquote>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<h4 id=\\\'在activity之间传递数据\\\'>在Activity之间传递数据</h4>\\n<p><strong>向下一个Activity传递数据</strong></p>\\n<p>我们可以直接调用Intent类的<code>putExtra</code>方法来向Intent对象中传入数据。例如：</p>\\n<pre><code class=\\\'language-kotlin\\\' lang=\\\'kotlin\\\'>val someData=&quot;Hello, second Activity&quot;\\nval intent = Intent(FirstActivity.this, SecondActivity::class.java)\\nintent.putExtra(&quot;some_data&quot;, someData)\\nstartActivity(intent)\\n</code></pre>\\n<p>然后在下一个Activity中拿到对应的数据，例如：</p>\\n<pre><code class=\\\'language-kotlin\\\' lang=\\\'kotlin\\\'>val data:String=intent.getStringData(&quot;some_data&quot;)\\n</code></pre>\\n<p>很容易想到，Intent对象肯定还有些重载的方法，比如：<code>getIntExtra(..), getBooleanExtra(..)</code>等。</p>\\n<p>&nbsp;</p>\\n<p><strong>为了某个数据启动</strong>Activity</p>\\n<p>有时候，我们启动某个Activity只是单纯的为了获得数据，这个时候，我们会调用<code>startActivityForResult(..)</code>。</p>\\n<p>首先，我们会在视图绑定中启动一个Activity：</p>\\n<pre><code class=\\\'language-kotlin\\\' lang=\\\'kotlin\\\'>binding.button1.setOnClickListener{\\n    intent = Intent(this, SecondActivity::class.java)\\n    // 第一个参数是Intent，第二个参数是一个RequestCode，响应时用来区分是哪个活动\\n    startActivityForResult(intent, 1)\\n}\\n</code></pre>\\n<p>然后，我们在某个Activity中对数据进行填充：</p>\\n<pre><code class=\\\'language-kotlin\\\' lang=\\\'kotlin\\\'>binding.button2.setOnClickListener{\\n    intent = Intent()\\n    intent.putExtra(&quot;data_return&quot;, &quot;Hello, first Activity&quot;)\\n    setResult(RESULT_OK, intent)\\n    finish()\\n}\\n</code></pre>\\n<p>当我们启动第二个Activity并点击了button2之后，便会回调第一个Activity中的<code>onActivityResult(..)</code>函数，这个时候，我们响应就好：</p>\\n<pre><code class=\\\'language-kotlin\\\' lang=\\\'kotlin\\\'>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\\n        when(requestCode){\\n            1 -&gt; {\\n                if(resultCode == RESULT_OK){\\n                    returnedData=data.getStringExtra(&quot;data_return&quot;)\\n                    Log.d(&quot;FirstActivity&quot;, returnedData)\\n                }\\n            }\\n        }\\n    }\\n</code></pre>\\n<p>&nbsp;</p>\\n<h4 id=\\\'activity生命周期\\\'>Activity生命周期</h4>\\n<p align=\\\"center\\\"><img src=\\\"https://gallery-1259614029.cos.ap-chengdu.myqcloud.com/img/20210103150910.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"lifecycle\\\"></p>\\n<p>Activity的七个回调方法：</p>\\n<ul>\\n<li><code>onCreate()</code>：会在Activity第一次被创建的时候调用。在此方法中可以完成Activity的初始化，比如加载布局，绑定事件等</li>\\n<li><code>onStart()</code>：这个方法在Activity由不可见变成可见的时候被调用</li>\\n<li><code>onResume()</code>：这个方法在Activity准备好和用户进行交互的时候被调用</li>\\n<li><code>onPause()</code>：这个方法在系统准备去启动或者恢复另一个Activity的时候被调用。可以在这个方法中将一些耗CPU的资源释放掉，以及保存一些关键数据，不过这就要求这个过程一定要快。</li>\\n<li><code>onStop()</code>：在App完全不可见的时候被调用。和<code>onPause</code>方法的不同之处在于，如果启动的新Activity是一个对话框式的Activity，那么<code>onPause</code>被执行而<code>onStop</code>方法不会被执行。</li>\\n<li><code>onDestroy()</code>：这个方法在Activity被销毁之前调用，之后的Activity将变为销毁状态。</li>\\n<li><code>onRestart()</code>：这个方法在Activity由停止状态变为运行状态之前调用，也就是Activity被重新启动了。</li>\\n\\n</ul>\\n<p>&nbsp;</p>\\n<h4 id=\\\'activity的启动模式\\\'>Activity的启动模式</h4>\\n<ul>\\n<li><p><code>&quot;standard&quot;</code>（默认模式）</p>\\n<p>默认值。系统在启动该 Activity 的任务中创建 Activity 的新实例，并将 intent 传送给该实例。Activity 可以多次实例化，每个实例可以属于不同的任务，一个任务可以拥有多个实例。</p>\\n</li>\\n<li><p><code>&quot;singleTop&quot;</code></p>\\n<p>如果当前任务的顶部已存在 Activity 的实例，则系统会通过调用其 <code>onNewIntent()</code> 方法来将 intent 转送给该实例，而不是创建 Activity 的新实例。Activity 可以多次实例化，每个实例可以属于不同的任务，一个任务可以拥有多个实例（但前提是返回堆栈顶部的 Activity 不是该 Activity 的现有实例）。</p>\\n<p>例如，假设任务的返回堆栈包含根 Activity A 以及 Activity B、C 和位于顶部的 D（堆栈为 A-B-C-D；D 位于顶部）。收到以 D 类型 Activity 为目标的 intent。如果 D 采用默认的 <code>&quot;standard&quot;</code> 启动模式，则会启动该类的新实例，并且堆栈将变为 A-B-C-D-D。但是，如果 D 的启动模式为 <code>&quot;singleTop&quot;</code>，则 D 的现有实例会通过 <code>onNewIntent()</code> 接收 intent，因为它位于堆栈顶部，堆栈仍为 A-B-C-D。但是，如果收到以 B 类型 Activity 为目标的 intent，则会在堆栈中添加 B 的新实例，即使其启动模式为 <code>&quot;singleTop&quot;</code> 也是如此。</p>\\n</li>\\n<li><p><code>&quot;singleTask&quot;</code></p>\\n<p>系统会创建新任务，并实例化新任务的根 Activity。但是，如果另外的任务中已存在该 Activity 的实例，则系统会通过调用其 <code>onNewIntent()</code> 方法将 intent 转送到该现有实例，而不是创建新实例。Activity 一次只能有一个实例存在。</p>\\n</li>\\n<li><p><code>&quot;singleInstance&quot;</code></p>\\n<p>与 <code>&quot;singleTask&quot;</code> 相似，唯一不同的是系统不会将任何其他 Activity 启动到包含该实例的任务中。该 Activity 始终是其任务唯一的成员；由该 Activity 启动的任何 Activity 都会在其他的Task中打开。</p>\\n</li>\\n\\n</ul>\\n<p>我们在<code>AndroidManifest.xml</code>文件的<code>&lt;Activity&gt;</code>标签中完成这些指定：</p>\\n<pre><code class=\\\'language-xml\\\' lang=\\\'xml\\\'>&lt;activity\\n            android:name=&quot;.SecondActivity&quot;\\n          &lt;!-- 指定以singleTop模式启动SecondActivity--&gt;\\n            android:launchMode=&quot;singleTop&quot;&gt;\\n            &lt;intent-filter tools:ignore=&quot;AppLinkUrlError&quot;&gt;\\n                &lt;action android:name=&quot;android.intent.action.VIEW&quot; /&gt;\\n                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;\\n                &lt;data android:scheme=&quot;https&quot;/&gt;\\n            &lt;/intent-filter&gt;\\n        &lt;/activity&gt;\\n</code></pre>\\n<p>&nbsp;</p>\\n<!-- /wp:html -->', '2021-08-08 16:13:07', '2021-10-25 22:29:50');
INSERT INTO `content` (`id`, `content`, `create_time`, `update_time`) VALUES (8, '<!-- wp:paragraph -->\\n<p>众所周知，coursera上有很多很好但很贵的课，比如Andrew的机器学习，IBM的数据可视化，斯坦福的算法专题（强推）。不过好在coursera有个助学金系统，写好申请原因基本就能白嫖成功。所以下面是是一份Coursera助学金的申请模板，一共有两大段：</p>\\n<!-- /wp:paragraph -->\\n\\n<!-- wp:html -->\\n<h5 id=\\\'1-why-are-you-applying-for-finance-aid-150-words-minimum-required\\\'>1. Why are you applying for Finance Aid? (150 words minimum required)</h5>\\n<blockquote><p>Dear reviewers, \\nI am a undergraduate of Wuhan University in China, majoring in Computer Science and Technology. I&#39;d like to register for this course to help me complete our lab&#39;s missions.\\nThere are some reasons that I want to apply for Coursera Financial Aid. First of all, my income is barely enough to cover my living expense. I don&#39;t have extra money to get the certificate. As a young student without income, I cannot afford to pay it. What&#39;s more, my family can only provide me limited finance support which does not cover the cost of extra online course. However, I really want to learn this machine learning course to improve my programming skills. \\nThank you for your consideration. If permitted, I commit to finishing this course seriously. No pain, no gain. I&#39;ll keep my step forward to the top. I am looking forward to your reply. Thank you again.</p>\\n</blockquote>\\n<h5 id=\\\'2-how-will-taking-this-course-help-you-achieve-your-career-goals-150-words-minimum-required\\\'>2. How will taking this course help you achieve your career goals? (150 words minimum required)</h5>\\n<blockquote><p>Dear reviewers,\\nI am a undergraduate of Wuhan University in China, majoring in Computer Science and Technology. \\nAs far as I&#39;m concerned, machine learning is a very popular and useful technology right now. It will not only helps me on my study, but also do me a favor in my employment. What&#39;s more, I think machine learning will broaden my understanding of computer science learning from a very high level, as I always believed that looking at some knowledges from different angles will show me many different landscapes. Last but not the least, It is widely used in recommendation systems, natural language understanding, image recognition and other fields. Thus, I deem that taking this course will provide a great help for my graduation and employment. I love this course, and I do believe that it could be a wonderful experience for my learning process. \\nI am grateful for your help if I get the Finance Aid. Thank you again.</p>\\n</blockquote>\\n<!-- /wp:html -->\\n\\n<!-- wp:paragraph -->\\n<p>记得改改课程名和一些理由啥的，完全一致有点太尴尬了。</p>\\n<!-- /wp:paragraph -->\\n\\n<!-- wp:paragraph -->\\n<p>哦还有，基本上现在申请需要15日才能下得来结果，有心仪的课记得早点申请。说起这个，想到了之前准备美赛来不及申请IBM的数据可视化课用7天试听学完了那门课。🙃', '2021-08-08 03:23:12', '2021-10-25 22:51:21');
INSERT INTO `content` (`id`, `content`, `create_time`, `update_time`) VALUES (9, '当你老了\r\n\r\n头发白了\r\n\r\n睡意昏沉\r\n\r\n当你老了\r\n\r\n走不动了\r\n\r\n炉火旁打盹\r\n\r\n回忆青春\r\n\r\n多少人曾爱你青春欢唱的时辰\r\n\r\n爱慕你的美丽\r\n\r\n假意或真心\r\n\r\n只有一个人还爱你虔诚的灵魂\r\n\r\n爱你苍老的脸上的皱纹\r\n\r\n当你老了\r\n\r\n眼眉低垂\r\n\r\n灯火昏黄不定\r\n\r\n风吹过来\r\n\r\n你的消息\r\n\r\n这就是我心里的歌\r\n\r\n多少人曾爱你青春欢唱的时辰\r\n\r\n爱慕你的美丽\r\n\r\n假意或真心\r\n\r\n只有一个人还爱你虔诚的灵魂\r\n\r\n爱你苍老的脸上的皱纹\r\n\r\n当你老了\r\n\r\n眼眉低垂\r\n\r\n灯火昏黄不定\r\n\r\n当我老了\r\n\r\n我真希望\r\n\r\n这首歌是唱给你的', '2021-08-01 23:00:44', '2021-10-25 23:00:48');
INSERT INTO `content` (`id`, `content`, `create_time`, `update_time`) VALUES (10, '我如果爱你——	If I love you --\r\n绝不像攀援的凌霄花	I will never be a clinging trumpet creeper\r\n借你的高枝炫耀自己	Using your high boughs to show off my height\r\n 	 \r\n我如果爱你——	If I love you --\r\n绝不学痴情的鸟儿	I will never be a spoony bird\r\n为绿荫重复单调的歌曲	Repeating a monotonous song for green shade\r\n 	 \r\n也不止像泉源	Or be a spring\r\n常年送来清凉的慰藉	Bringing cool solace all year long\r\n也不止像险峰	Or be a steep peak\r\n增加你的高度，衬托你的威仪	Increasing your stature, reflecting your eminence\r\n甚至日光	Even the sunlight\r\n甚至春雨	Even the spring rain\r\n不，这些都还不够	No, all these are not enough\r\n 	 \r\n我必须是你近旁的一株木棉	I must be a ceiba tree beside you\r\n作为树的形象和你站在一起	Be the image of a tree standing together with you\r\n根，紧握在地下	Our roots, entwined underground\r\n叶，相触在云里	Our leaves, touching in the clouds\r\n每一阵风过	With each gust of wind\r\n我们都互相致意	We greet each other\r\n但没有人	But nobody\r\n听懂我们的言语	Can understand our words\r\n 	 \r\n你有你的铜枝铁干	You\'ll have your copper branches and iron trunk\r\n像刀、像剑，也像戟	Like knives, like swords, like halberds, too\r\n我有我的红硕花朵	I\'ll have my crimson flowers\r\n像沉重的叹息	Like heavy sighs\r\n又像英勇的火炬	And valiant torches\r\n我们分担寒潮、风雷、霹雳	We\'ll share cold spells, storms and thunder\r\n我们共享雾霭、流岚、虹霓	We\'ll share mists, hazes and rainbows\r\n仿佛永远分离	Seemingly always apart\r\n却又终身相依	But also forever interdependent\r\n 	 \r\n这才是伟大的爱情	Only this can be great love\r\n坚贞就在这里	The loyalty is here\r\n爱——	Love --\r\n不仅爱你伟岸的身躯	I love not only your strapping stature\r\n也爱你坚持的位置，足下的土地	But also your firm stand, the earth beneath you', '2021-07-01 23:06:24', '2021-10-25 23:06:30');
INSERT INTO `content` (`id`, `content`, `create_time`, `update_time`) VALUES (11, '乌云在我们心里\r\n搁下一块阴影\r\n我聆听沉寂已久的心情\r\n清晰透明就像美丽的风景\r\n总在回忆里才看得清\r\n被伤透的心\r\n能不能够继续爱我\r\n我用力牵起没温度的双手\r\n过往温柔已经被时间上锁\r\n只剩挥散不去的难过\r\n缓缓飘落的枫叶像思念\r\n我点燃烛火温暖岁末的秋天\r\n极光掠夺天边\r\n北风掠过想你的容颜\r\n我把爱烧成了落叶\r\n却换不回熟悉的那张脸\r\n缓缓飘落的枫叶像思念\r\n为何挽回要赶在冬天来之前\r\n爱你穿越时间\r\n两行来自秋末的眼泪\r\n让爱渗透了地面\r\n我要的只是你在我身边\r\n被伤透的心\r\n能不能够继续爱我\r\n我用力牵起没温度的双手\r\n过往温柔已经被时间上锁\r\n只剩挥散不去的难过\r\n在山腰间飘逸的红雨\r\n随着北风凋零\r\n我轻轻摇曳风铃\r\n想唤醒被遗弃的爱情\r\n雪花已铺满了地\r\n深怕窗外枫叶已结成冰\r\n缓缓飘落的枫叶像思念\r\n我点燃烛火温暖岁末的秋天\r\n极光掠夺天边\r\n北风掠过想你的容颜\r\n我把爱烧成了落叶\r\n却换不回熟悉的那张脸\r\n缓缓飘落的枫叶像思念\r\n为何挽回要赶在冬天来之前\r\n爱你穿越时间\r\n两行来自秋末的眼泪\r\n让爱渗透了地面\r\n我要的只是你在我身边', '2021-07-01 23:11:38', '2021-10-25 23:11:43');
INSERT INTO `content` (`id`, `content`, `create_time`, `update_time`) VALUES (12, '有人曾说，世界上唯一不能重来的是爱情。\r\n\r\n当爱情逝去的时候，我们用什么样的态度去对待呢？\r\n\r\n15年前，一个樱花飘舞的日子，一对小夫妻在亲人的祝福声中共结连理。\r\n\r\n婚后的日子平凡而幸福。\r\n\r\n平时，他们各自努力地工作；\r\n\r\n假日，他们一起去海边度假或者去山野健行。\r\n\r\n他们没有孩子，把爱犬汉娜视如已出。\r\n\r\n有一次他们还带上汉娜，在冲绳岛度过了一段美好的时光。\r\n\r\n但不知为何，妻子爱上了别人，坚决要求离婚。\r\n\r\n有人说，婚姻没有对与错，只有爱与不爱。\r\n\r\n先生虽然经过沟通，但妻子与新欢已经在冲绳离岛开始了新的生活。\r\n\r\n俗话说：“强扭的瓜不甜。”\r\n\r\n既然不爱了，恨也无从谈起，不如选择放手吧。\r\n\r\n只是辜负了曾经给予他们祝福的亲友。\r\n\r\n丈夫露出坚定的眼神说：“俗话说，只要结局完美，过去的种种都算好。”\r\n\r\n于是他请鸠子写封向亲友报告离婚，向亲友传达两人感谢的心意。\r\n\r\n信中写道：\r\n\r\n承蒙各位亲友祝福，如今离婚，深感内疚。\r\n\r\n虽然不能白头偕老，但感恩彼此相依相伴。\r\n\r\n希望亲友们继续祝福他们各自安好。\r\n\r\n古人有云：“人无千日好，花无百日红。”\r\n\r\n每段婚姻的开始，无不憧憬着白头偕老，但许多婚姻常常是有始无终，以互相指责谩骂收场。\r\n\r\n而和平分手，正是素养的体现。\r\n\r\n我原来以为可以给你幸福，而如今只能给你祝福：\r\n\r\n长路漫漫，感谢陪伴。未来无期，一别两宽！', '2021-09-01 23:24:12', '2021-10-25 23:24:15');
